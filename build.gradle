plugins {
	id('fabric-loom').version('0.12-SNAPSHOT')
	id('maven-publish')
}

setVersion(project.mod_version)
setGroup(project.maven_group)

loom {
	accessWidenerPath.set(file('src/main/resources/umu_backpack.accesswidener'))
}

repositories {
	maven { url('https://jitpack.io')}
	maven { url('https://maven.shedaniel.me/')}
	maven { url('https://maven.terraformersmc.com/releases/')}
}

dependencies {
	minecraft(group: 'com.mojang', name: 'minecraft', version: project.minecraft_version)
	mappings(group: 'net.fabricmc', name: 'yarn', version: project.yarn_mappings, classifier: 'v2')
	modImplementation(group: 'net.fabricmc', name: 'fabric-loader', version: project.loader_version)
	modImplementation(group: 'net.fabricmc.fabric-api', name: 'fabric-api', version: project.fabric_version)

	modImplementation(include(group: 'com.github.Chocohead', name: 'fabric-asm', version: 'v2.3'))
	modImplementation(group: 'com.terraformersmc', name: 'modmenu', version: project.modmenu_version)
	modImplementation(include(group: 'com.github.Zemelua', name: 'UMU-Config', version: 'main-SNAPSHOT'))
}

processResources {
	filteringCharset "UTF-8"

	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

Integer targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.getRelease().set(targetJavaVersion)
	}
}

java {
	JavaVersion javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

remapJar {
	archiveFileName = "${project.archivesBaseName}-${project.version}-${project.depends_minecraft_version}.jar"
}

publishing {
	publications {
		//noinspection GroovyAssignabilityCheck
		mavenJava(MavenPublication) {
			//noinspection GroovyAssignabilityCheck
			from components.java
		}
	}
}
